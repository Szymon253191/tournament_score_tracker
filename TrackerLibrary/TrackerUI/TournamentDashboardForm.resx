<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn6P8cerj/Hnq10drn500AAAAAAAAAAAAAAADn5+dNFKXq0RWn
        6P8Wo+3/E6bo9kC27L4on9SjKJ/Uoyif1KMweq2jS5LCvmfM/vYfpfH/H6Xx/xel6v8Vp+j/Fafo/xWn
        6P8Vp+j/Fafo/xen6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xx4uf8eerb2RJLCviWf
        1KMrn9GjK5/Uo0C27L4Upej2Fafo/9Ps+HoVp+j/FKbo9hSn6PQUp+j0FKfo9CF6uPQgebT2JK7s/xam
        6f8Wpun/Fabo/xWn6P8Vp+j/Fafo/xan5/8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn
        6P8Vp+j/Ini2/x56tv8eerb2FKXo9BSn5vQUp+j0FKbo9hWn6P8UpujTlpaWEWyHki9sh5IvbIeSL2yH
        ki9sh5IvbHyHL9Ll7Z8afb3lHX69/xt+vf8bfr3/G369/xt+vf8bfr3/HX67/xt/vP8bf7z/G3+8/xt/
        vP8bf7z/G369/xt/vP8bfr3/G369/xt+vf8feLf/Hnq2/xd6tuXP7fiWbIeSL2yHki9sh5IvbIeSL26C
        kCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnoNOBP7bsxRWc3vkWnd7/Fp3e/xad3v8Wnd7/Fp3e/xad
        3v8Wnd3/Fp3d/xad3f8Wnd3/Fp3d/xad3f8Wnd7/Fp3d/xad3v8Wnd7/Fp3e/xae3/8ferb/G3m2+UeR
        wqEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOm6cEdpO/2Fafo/xWn
        6P8Vp+j/Fabp/xWn6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn6P8Vp+j/Fafo/xWn
        6P8Vp+j/Fafo/x56tv8eerb/HnmzwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAboKQJWyHki9sh5IvbIeSL2yHki9sh5IvbIeSL2yHki9sh5IvbIeSL2yHki9sh5IvbIeSL2yH
        ki9sh5IvbIeSL2yHki9sh5IvbIeSL2yHki9sh5IvbHyHL2x8hy9ufIklAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/gAAf4AAAAP+AAB/gAAAA/8AAP+AAAAD/4AB/4AAAAP/gAH/gAAAA/+AAf+AAAAD/4AB/4AAAAP/g
        AH/gAAAA/+AAf+AAAAD/4AB/4AAAAP/gAH/gAAAA/+AA/+AAAAD/8AH/4AAAAP/8A//gAAAA//4H/+AA
        AAD//g//4AAAAP//D//gAAAA//4H/+AAAAD//gf/4AAAAP/8A//gAAAA//gB/+AAAAD/8AD/4AAAAP4A
        AAfgAAAA8AAAAOAAAADgAAAAYAAAAMBAABBgAAAAw4AAHCAAAACHAAAeAAAAAA8AAB8AAAAAHwAAHwAA
        AAAfAAAPgAAAAD8AAA+AAAAAPwAAD4AAAAA/AAAPgAAAAD8AAA+AAAAAHgAABwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8AAAD4AAAAPwAAAPgAAAA/AAAA+AAAAA=
</value>
  </data>
</root>